/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var teletype$crdt_pb = require('./teletype-crdt_pb.js');
goog.exportSymbol('proto.DM', null, global);
goog.exportSymbol('proto.DM.Channel', null, global);
goog.exportSymbol('proto.DM.CreatePortalResponse', null, global);
goog.exportSymbol('proto.DM.Host', null, global);
goog.exportSymbol('proto.DM.JoinPortalRequest', null, global);
goog.exportSymbol('proto.DM.JoinPortalResponse', null, global);
goog.exportSymbol('proto.DM.Notification', null, global);
goog.exportSymbol('proto.DM.Portal', null, global);
goog.exportSymbol('proto.DM.Portal.BufferProxy', null, global);
goog.exportSymbol('proto.DM.Portal.EditorProxy', null, global);
goog.exportSymbol('proto.DM.Portal.EditorProxyMetadata', null, global);
goog.exportSymbol('proto.DM.Portal.SubscriptionResponse', null, global);
goog.exportSymbol('proto.DM.Portal.Tether', null, global);
goog.exportSymbol('proto.DM.Portal.Update', null, global);
goog.exportSymbol('proto.DM.Portal.Update.EditorProxyCreation', null, global);
goog.exportSymbol('proto.DM.Portal.Update.EditorProxyRemoval', null, global);
goog.exportSymbol('proto.DM.Portal.Update.EditorProxySwitch', null, global);
goog.exportSymbol('proto.DM.Portal.Update.Operations', null, global);
goog.exportSymbol('proto.DM.Portal.Update.Selections', null, global);
goog.exportSymbol('proto.DM.Portal.Update.SiteAssignment', null, global);
goog.exportSymbol('proto.DM.Portal.Update.Uri', null, global);
goog.exportSymbol('proto.DM.Request', null, global);
goog.exportSymbol('proto.DM.Response', null, global);
goog.exportSymbol('proto.DM.UserIdResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.DM.oneofGroups_);
};
goog.inherits(proto.DM, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.displayName = 'proto.DM';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.DM.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.DM.VariantCase = {
  VARIANT_NOT_SET: 0,
  USER_ID_REQUEST: 1,
  USER_ID_RESPONSE: 2,
  CREATE_PORTAL_REQUEST: 3,
  CREATE_PORTAL_RESPONSE: 4,
  JOIN_PORTAL_REQUEST: 5,
  JOIN_PORTAL_RESPONSE: 6,
  NOTIFICATION: 7,
  REQUEST: 8,
  RESPONSE: 9,
  PORTAL: 10,
  CHANNEL: 11
};

/**
 * @return {proto.DM.VariantCase}
 */
proto.DM.prototype.getVariantCase = function() {
  return /** @type {proto.DM.VariantCase} */(jspb.Message.computeOneofCase(this, proto.DM.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdRequest: jspb.Message.getFieldWithDefault(msg, 1, false),
    userIdResponse: (f = msg.getUserIdResponse()) && proto.DM.UserIdResponse.toObject(includeInstance, f),
    createPortalRequest: jspb.Message.getFieldWithDefault(msg, 3, false),
    createPortalResponse: (f = msg.getCreatePortalResponse()) && proto.DM.CreatePortalResponse.toObject(includeInstance, f),
    joinPortalRequest: (f = msg.getJoinPortalRequest()) && proto.DM.JoinPortalRequest.toObject(includeInstance, f),
    joinPortalResponse: (f = msg.getJoinPortalResponse()) && proto.DM.JoinPortalResponse.toObject(includeInstance, f),
    notification: (f = msg.getNotification()) && proto.DM.Notification.toObject(includeInstance, f),
    request: (f = msg.getRequest()) && proto.DM.Request.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.DM.Response.toObject(includeInstance, f),
    portal: (f = msg.getPortal()) && proto.DM.Portal.toObject(includeInstance, f),
    channel: (f = msg.getChannel()) && proto.DM.Channel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM}
 */
proto.DM.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM;
  return proto.DM.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM}
 */
proto.DM.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserIdRequest(value);
      break;
    case 2:
      var value = new proto.DM.UserIdResponse;
      reader.readMessage(value,proto.DM.UserIdResponse.deserializeBinaryFromReader);
      msg.setUserIdResponse(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreatePortalRequest(value);
      break;
    case 4:
      var value = new proto.DM.CreatePortalResponse;
      reader.readMessage(value,proto.DM.CreatePortalResponse.deserializeBinaryFromReader);
      msg.setCreatePortalResponse(value);
      break;
    case 5:
      var value = new proto.DM.JoinPortalRequest;
      reader.readMessage(value,proto.DM.JoinPortalRequest.deserializeBinaryFromReader);
      msg.setJoinPortalRequest(value);
      break;
    case 6:
      var value = new proto.DM.JoinPortalResponse;
      reader.readMessage(value,proto.DM.JoinPortalResponse.deserializeBinaryFromReader);
      msg.setJoinPortalResponse(value);
      break;
    case 7:
      var value = new proto.DM.Notification;
      reader.readMessage(value,proto.DM.Notification.deserializeBinaryFromReader);
      msg.setNotification(value);
      break;
    case 8:
      var value = new proto.DM.Request;
      reader.readMessage(value,proto.DM.Request.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 9:
      var value = new proto.DM.Response;
      reader.readMessage(value,proto.DM.Response.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 10:
      var value = new proto.DM.Portal;
      reader.readMessage(value,proto.DM.Portal.deserializeBinaryFromReader);
      msg.setPortal(value);
      break;
    case 11:
      var value = new proto.DM.Channel;
      reader.readMessage(value,proto.DM.Channel.deserializeBinaryFromReader);
      msg.setChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUserIdResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DM.UserIdResponse.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getCreatePortalResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.DM.CreatePortalResponse.serializeBinaryToWriter
    );
  }
  f = message.getJoinPortalRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.DM.JoinPortalRequest.serializeBinaryToWriter
    );
  }
  f = message.getJoinPortalResponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.DM.JoinPortalResponse.serializeBinaryToWriter
    );
  }
  f = message.getNotification();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.DM.Notification.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.DM.Request.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.DM.Response.serializeBinaryToWriter
    );
  }
  f = message.getPortal();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.DM.Portal.serializeBinaryToWriter
    );
  }
  f = message.getChannel();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.DM.Channel.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.UserIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.UserIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.UserIdResponse.displayName = 'proto.DM.UserIdResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.UserIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.UserIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.UserIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.UserIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.UserIdResponse}
 */
proto.DM.UserIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.UserIdResponse;
  return proto.DM.UserIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.UserIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.UserIdResponse}
 */
proto.DM.UserIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.UserIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.UserIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.UserIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.UserIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.DM.UserIdResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.UserIdResponse.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.CreatePortalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.CreatePortalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.CreatePortalResponse.displayName = 'proto.DM.CreatePortalResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.CreatePortalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.CreatePortalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.CreatePortalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.CreatePortalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    portalId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.CreatePortalResponse}
 */
proto.DM.CreatePortalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.CreatePortalResponse;
  return proto.DM.CreatePortalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.CreatePortalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.CreatePortalResponse}
 */
proto.DM.CreatePortalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.CreatePortalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.CreatePortalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.CreatePortalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.CreatePortalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string portal_id = 1;
 * @return {string}
 */
proto.DM.CreatePortalResponse.prototype.getPortalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.CreatePortalResponse.prototype.setPortalId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.JoinPortalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.JoinPortalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.JoinPortalRequest.displayName = 'proto.DM.JoinPortalRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.JoinPortalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.JoinPortalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.JoinPortalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.JoinPortalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hostId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    portalId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.JoinPortalRequest}
 */
proto.DM.JoinPortalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.JoinPortalRequest;
  return proto.DM.JoinPortalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.JoinPortalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.JoinPortalRequest}
 */
proto.DM.JoinPortalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.JoinPortalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.JoinPortalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.JoinPortalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.JoinPortalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHostId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPortalId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string remote_id = 1;
 * @return {string}
 */
proto.DM.JoinPortalRequest.prototype.getRemoteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.JoinPortalRequest.prototype.setRemoteId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string host_id = 2;
 * @return {string}
 */
proto.DM.JoinPortalRequest.prototype.getHostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.DM.JoinPortalRequest.prototype.setHostId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string portal_id = 3;
 * @return {string}
 */
proto.DM.JoinPortalRequest.prototype.getPortalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.DM.JoinPortalRequest.prototype.setPortalId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.JoinPortalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.JoinPortalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.JoinPortalResponse.displayName = 'proto.DM.JoinPortalResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.JoinPortalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.JoinPortalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.JoinPortalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.JoinPortalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.JoinPortalResponse}
 */
proto.DM.JoinPortalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.JoinPortalResponse;
  return proto.DM.JoinPortalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.JoinPortalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.JoinPortalResponse}
 */
proto.DM.JoinPortalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.JoinPortalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.JoinPortalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.JoinPortalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.JoinPortalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DM.JoinPortalResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.DM.JoinPortalResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Host = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Host, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Host.displayName = 'proto.DM.Host';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Host.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Host.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Host} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Host.toObject = function(includeInstance, msg) {
  var f, obj = {
    portalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Host}
 */
proto.DM.Host.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Host;
  return proto.DM.Host.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Host} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Host}
 */
proto.DM.Host.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Host.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Host.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Host} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Host.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string portal_id = 1;
 * @return {string}
 */
proto.DM.Host.prototype.getPortalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.Host.prototype.setPortalId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.DM.Host.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.DM.Host.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Notification.displayName = 'proto.DM.Notification';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: (f = msg.getHost()) && proto.DM.Host.toObject(includeInstance, f),
    body: msg.getBody_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Notification}
 */
proto.DM.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Notification;
  return proto.DM.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Notification}
 */
proto.DM.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 3:
      var value = new proto.DM.Host;
      reader.readMessage(value,proto.DM.Host.deserializeBinaryFromReader);
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.DM.Host.serializeBinaryToWriter
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string sender_id = 1;
 * @return {string}
 */
proto.DM.Notification.prototype.getSenderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.Notification.prototype.setSenderId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.DM.Notification.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.DM.Notification.prototype.setChannelId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Host host = 3;
 * @return {?proto.DM.Host}
 */
proto.DM.Notification.prototype.getHost = function() {
  return /** @type{?proto.DM.Host} */ (
    jspb.Message.getWrapperField(this, proto.DM.Host, 3));
};


/** @param {?proto.DM.Host|undefined} value */
proto.DM.Notification.prototype.setHost = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.DM.Notification.prototype.clearHost = function() {
  this.setHost(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Notification.prototype.hasHost = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes body = 4;
 * @return {!(string|Uint8Array)}
 */
proto.DM.Notification.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes body = 4;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.DM.Notification.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.DM.Notification.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.DM.Notification.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Request.displayName = 'proto.DM.Request';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    host: (f = msg.getHost()) && proto.DM.Host.toObject(includeInstance, f),
    channelId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    requestId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    body: msg.getBody_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Request}
 */
proto.DM.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Request;
  return proto.DM.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Request}
 */
proto.DM.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderId(value);
      break;
    case 2:
      var value = new proto.DM.Host;
      reader.readMessage(value,proto.DM.Host.deserializeBinaryFromReader);
      msg.setHost(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequestId(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHost();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DM.Host.serializeBinaryToWriter
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRequestId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string sender_id = 1;
 * @return {string}
 */
proto.DM.Request.prototype.getSenderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.Request.prototype.setSenderId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Host host = 2;
 * @return {?proto.DM.Host}
 */
proto.DM.Request.prototype.getHost = function() {
  return /** @type{?proto.DM.Host} */ (
    jspb.Message.getWrapperField(this, proto.DM.Host, 2));
};


/** @param {?proto.DM.Host|undefined} value */
proto.DM.Request.prototype.setHost = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.DM.Request.prototype.clearHost = function() {
  this.setHost(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Request.prototype.hasHost = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string channel_id = 3;
 * @return {string}
 */
proto.DM.Request.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.DM.Request.prototype.setChannelId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 request_id = 4;
 * @return {number}
 */
proto.DM.Request.prototype.getRequestId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.DM.Request.prototype.setRequestId = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes body = 5;
 * @return {!(string|Uint8Array)}
 */
proto.DM.Request.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes body = 5;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.DM.Request.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.DM.Request.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.DM.Request.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Response.displayName = 'proto.DM.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ok: jspb.Message.getFieldWithDefault(msg, 3, false),
    body: msg.getBody_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Response}
 */
proto.DM.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Response;
  return proto.DM.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Response}
 */
proto.DM.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getOk();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string recipient_id = 1;
 * @return {string}
 */
proto.DM.Response.prototype.getRecipientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.Response.prototype.setRecipientId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 request_id = 2;
 * @return {number}
 */
proto.DM.Response.prototype.getRequestId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.DM.Response.prototype.setRequestId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool ok = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DM.Response.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.DM.Response.prototype.setOk = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bytes body = 4;
 * @return {!(string|Uint8Array)}
 */
proto.DM.Response.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes body = 4;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.DM.Response.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.DM.Response.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.DM.Response.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.DM.Portal.oneofGroups_);
};
goog.inherits(proto.DM.Portal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.displayName = 'proto.DM.Portal';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.DM.Portal.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.DM.Portal.VariantCase = {
  VARIANT_NOT_SET: 0,
  SUBSCRIPTION_RESPONSE: 1,
  TETHER: 2,
  BUFFER_PROXY: 3,
  EDITOR_PROXY: 4,
  EDITOR_PROXY_METADATA: 5,
  UPDATE: 6
};

/**
 * @return {proto.DM.Portal.VariantCase}
 */
proto.DM.Portal.prototype.getVariantCase = function() {
  return /** @type {proto.DM.Portal.VariantCase} */(jspb.Message.computeOneofCase(this, proto.DM.Portal.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscriptionResponse: (f = msg.getSubscriptionResponse()) && proto.DM.Portal.SubscriptionResponse.toObject(includeInstance, f),
    tether: (f = msg.getTether()) && proto.DM.Portal.Tether.toObject(includeInstance, f),
    bufferProxy: (f = msg.getBufferProxy()) && proto.DM.Portal.BufferProxy.toObject(includeInstance, f),
    editorProxy: (f = msg.getEditorProxy()) && proto.DM.Portal.EditorProxy.toObject(includeInstance, f),
    editorProxyMetadata: (f = msg.getEditorProxyMetadata()) && proto.DM.Portal.EditorProxyMetadata.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.DM.Portal.Update.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal}
 */
proto.DM.Portal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal;
  return proto.DM.Portal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal}
 */
proto.DM.Portal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DM.Portal.SubscriptionResponse;
      reader.readMessage(value,proto.DM.Portal.SubscriptionResponse.deserializeBinaryFromReader);
      msg.setSubscriptionResponse(value);
      break;
    case 2:
      var value = new proto.DM.Portal.Tether;
      reader.readMessage(value,proto.DM.Portal.Tether.deserializeBinaryFromReader);
      msg.setTether(value);
      break;
    case 3:
      var value = new proto.DM.Portal.BufferProxy;
      reader.readMessage(value,proto.DM.Portal.BufferProxy.deserializeBinaryFromReader);
      msg.setBufferProxy(value);
      break;
    case 4:
      var value = new proto.DM.Portal.EditorProxy;
      reader.readMessage(value,proto.DM.Portal.EditorProxy.deserializeBinaryFromReader);
      msg.setEditorProxy(value);
      break;
    case 5:
      var value = new proto.DM.Portal.EditorProxyMetadata;
      reader.readMessage(value,proto.DM.Portal.EditorProxyMetadata.deserializeBinaryFromReader);
      msg.setEditorProxyMetadata(value);
      break;
    case 6:
      var value = new proto.DM.Portal.Update;
      reader.readMessage(value,proto.DM.Portal.Update.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscriptionResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DM.Portal.SubscriptionResponse.serializeBinaryToWriter
    );
  }
  f = message.getTether();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DM.Portal.Tether.serializeBinaryToWriter
    );
  }
  f = message.getBufferProxy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.DM.Portal.BufferProxy.serializeBinaryToWriter
    );
  }
  f = message.getEditorProxy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.DM.Portal.EditorProxy.serializeBinaryToWriter
    );
  }
  f = message.getEditorProxyMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.DM.Portal.EditorProxyMetadata.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.DM.Portal.Update.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.SubscriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DM.Portal.SubscriptionResponse.repeatedFields_, null);
};
goog.inherits(proto.DM.Portal.SubscriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.SubscriptionResponse.displayName = 'proto.DM.Portal.SubscriptionResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DM.Portal.SubscriptionResponse.repeatedFields_ = [2,3,4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.SubscriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.SubscriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.SubscriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.SubscriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    siteIdsByPeerIdMap: (f = msg.getSiteIdsByPeerIdMap()) ? f.toObject(includeInstance, undefined) : [],
    tethersList: jspb.Message.toObjectList(msg.getTethersList(),
    proto.DM.Portal.Tether.toObject, includeInstance),
    activeBufferProxiesList: jspb.Message.toObjectList(msg.getActiveBufferProxiesList(),
    proto.DM.Portal.BufferProxy.toObject, includeInstance),
    activeEditorProxiesList: jspb.Message.toObjectList(msg.getActiveEditorProxiesList(),
    proto.DM.Portal.EditorProxy.toObject, includeInstance),
    activeEditorProxyIdsBySiteIdMap: (f = msg.getActiveEditorProxyIdsBySiteIdMap()) ? f.toObject(includeInstance, undefined) : [],
    editorProxiesMetadataList: jspb.Message.toObjectList(msg.getEditorProxiesMetadataList(),
    proto.DM.Portal.EditorProxyMetadata.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.SubscriptionResponse}
 */
proto.DM.Portal.SubscriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.SubscriptionResponse;
  return proto.DM.Portal.SubscriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.SubscriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.SubscriptionResponse}
 */
proto.DM.Portal.SubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getSiteIdsByPeerIdMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readUint32);
         });
      break;
    case 2:
      var value = new proto.DM.Portal.Tether;
      reader.readMessage(value,proto.DM.Portal.Tether.deserializeBinaryFromReader);
      msg.addTethers(value);
      break;
    case 3:
      var value = new proto.DM.Portal.BufferProxy;
      reader.readMessage(value,proto.DM.Portal.BufferProxy.deserializeBinaryFromReader);
      msg.addActiveBufferProxies(value);
      break;
    case 4:
      var value = new proto.DM.Portal.EditorProxy;
      reader.readMessage(value,proto.DM.Portal.EditorProxy.deserializeBinaryFromReader);
      msg.addActiveEditorProxies(value);
      break;
    case 5:
      var value = msg.getActiveEditorProxyIdsBySiteIdMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32);
         });
      break;
    case 6:
      var value = new proto.DM.Portal.EditorProxyMetadata;
      reader.readMessage(value,proto.DM.Portal.EditorProxyMetadata.deserializeBinaryFromReader);
      msg.addEditorProxiesMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.SubscriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.SubscriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.SubscriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.SubscriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSiteIdsByPeerIdMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getTethersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.DM.Portal.Tether.serializeBinaryToWriter
    );
  }
  f = message.getActiveBufferProxiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.DM.Portal.BufferProxy.serializeBinaryToWriter
    );
  }
  f = message.getActiveEditorProxiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.DM.Portal.EditorProxy.serializeBinaryToWriter
    );
  }
  f = message.getActiveEditorProxyIdsBySiteIdMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getEditorProxiesMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.DM.Portal.EditorProxyMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, uint32> site_ids_by_peer_id = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.DM.Portal.SubscriptionResponse.prototype.getSiteIdsByPeerIdMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


proto.DM.Portal.SubscriptionResponse.prototype.clearSiteIdsByPeerIdMap = function() {
  this.getSiteIdsByPeerIdMap().clear();
};


/**
 * repeated Tether tethers = 2;
 * @return {!Array.<!proto.DM.Portal.Tether>}
 */
proto.DM.Portal.SubscriptionResponse.prototype.getTethersList = function() {
  return /** @type{!Array.<!proto.DM.Portal.Tether>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DM.Portal.Tether, 2));
};


/** @param {!Array.<!proto.DM.Portal.Tether>} value */
proto.DM.Portal.SubscriptionResponse.prototype.setTethersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.DM.Portal.Tether=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DM.Portal.Tether}
 */
proto.DM.Portal.SubscriptionResponse.prototype.addTethers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.DM.Portal.Tether, opt_index);
};


proto.DM.Portal.SubscriptionResponse.prototype.clearTethersList = function() {
  this.setTethersList([]);
};


/**
 * repeated BufferProxy active_buffer_proxies = 3;
 * @return {!Array.<!proto.DM.Portal.BufferProxy>}
 */
proto.DM.Portal.SubscriptionResponse.prototype.getActiveBufferProxiesList = function() {
  return /** @type{!Array.<!proto.DM.Portal.BufferProxy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DM.Portal.BufferProxy, 3));
};


/** @param {!Array.<!proto.DM.Portal.BufferProxy>} value */
proto.DM.Portal.SubscriptionResponse.prototype.setActiveBufferProxiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.DM.Portal.BufferProxy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DM.Portal.BufferProxy}
 */
proto.DM.Portal.SubscriptionResponse.prototype.addActiveBufferProxies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.DM.Portal.BufferProxy, opt_index);
};


proto.DM.Portal.SubscriptionResponse.prototype.clearActiveBufferProxiesList = function() {
  this.setActiveBufferProxiesList([]);
};


/**
 * repeated EditorProxy active_editor_proxies = 4;
 * @return {!Array.<!proto.DM.Portal.EditorProxy>}
 */
proto.DM.Portal.SubscriptionResponse.prototype.getActiveEditorProxiesList = function() {
  return /** @type{!Array.<!proto.DM.Portal.EditorProxy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DM.Portal.EditorProxy, 4));
};


/** @param {!Array.<!proto.DM.Portal.EditorProxy>} value */
proto.DM.Portal.SubscriptionResponse.prototype.setActiveEditorProxiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.DM.Portal.EditorProxy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DM.Portal.EditorProxy}
 */
proto.DM.Portal.SubscriptionResponse.prototype.addActiveEditorProxies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.DM.Portal.EditorProxy, opt_index);
};


proto.DM.Portal.SubscriptionResponse.prototype.clearActiveEditorProxiesList = function() {
  this.setActiveEditorProxiesList([]);
};


/**
 * map<uint32, uint32> active_editor_proxy_ids_by_site_id = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.DM.Portal.SubscriptionResponse.prototype.getActiveEditorProxyIdsBySiteIdMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


proto.DM.Portal.SubscriptionResponse.prototype.clearActiveEditorProxyIdsBySiteIdMap = function() {
  this.getActiveEditorProxyIdsBySiteIdMap().clear();
};


/**
 * repeated EditorProxyMetadata editor_proxies_metadata = 6;
 * @return {!Array.<!proto.DM.Portal.EditorProxyMetadata>}
 */
proto.DM.Portal.SubscriptionResponse.prototype.getEditorProxiesMetadataList = function() {
  return /** @type{!Array.<!proto.DM.Portal.EditorProxyMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DM.Portal.EditorProxyMetadata, 6));
};


/** @param {!Array.<!proto.DM.Portal.EditorProxyMetadata>} value */
proto.DM.Portal.SubscriptionResponse.prototype.setEditorProxiesMetadataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.DM.Portal.EditorProxyMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DM.Portal.EditorProxyMetadata}
 */
proto.DM.Portal.SubscriptionResponse.prototype.addEditorProxiesMetadata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.DM.Portal.EditorProxyMetadata, opt_index);
};


proto.DM.Portal.SubscriptionResponse.prototype.clearEditorProxiesMetadataList = function() {
  this.setEditorProxiesMetadataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Tether = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.Tether, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Tether.displayName = 'proto.DM.Portal.Tether';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Tether.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Tether.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Tether} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Tether.toObject = function(includeInstance, msg) {
  var f, obj = {
    followerSiteId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    leaderSiteId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Tether}
 */
proto.DM.Portal.Tether.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Tether;
  return proto.DM.Portal.Tether.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Tether} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Tether}
 */
proto.DM.Portal.Tether.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFollowerSiteId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeaderSiteId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Tether.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Tether.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Tether} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Tether.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFollowerSiteId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLeaderSiteId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 follower_site_id = 1;
 * @return {number}
 */
proto.DM.Portal.Tether.prototype.getFollowerSiteId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DM.Portal.Tether.prototype.setFollowerSiteId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 leader_site_id = 2;
 * @return {number}
 */
proto.DM.Portal.Tether.prototype.getLeaderSiteId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.DM.Portal.Tether.prototype.setLeaderSiteId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 state = 3;
 * @return {number}
 */
proto.DM.Portal.Tether.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.DM.Portal.Tether.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.BufferProxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DM.Portal.BufferProxy.repeatedFields_, null);
};
goog.inherits(proto.DM.Portal.BufferProxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.BufferProxy.displayName = 'proto.DM.Portal.BufferProxy';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DM.Portal.BufferProxy.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.BufferProxy.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.BufferProxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.BufferProxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.BufferProxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    teletype$crdt_pb.Operation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.BufferProxy}
 */
proto.DM.Portal.BufferProxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.BufferProxy;
  return proto.DM.Portal.BufferProxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.BufferProxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.BufferProxy}
 */
proto.DM.Portal.BufferProxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 3:
      var value = new teletype$crdt_pb.Operation;
      reader.readMessage(value,teletype$crdt_pb.Operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.BufferProxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.BufferProxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.BufferProxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.BufferProxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      teletype$crdt_pb.Operation.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.DM.Portal.BufferProxy.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DM.Portal.BufferProxy.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uri = 2;
 * @return {string}
 */
proto.DM.Portal.BufferProxy.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.DM.Portal.BufferProxy.prototype.setUri = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Operation operations = 3;
 * @return {!Array.<!proto.Operation>}
 */
proto.DM.Portal.BufferProxy.prototype.getOperationsList = function() {
  return /** @type{!Array.<!proto.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, teletype$crdt_pb.Operation, 3));
};


/** @param {!Array.<!proto.Operation>} value */
proto.DM.Portal.BufferProxy.prototype.setOperationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Operation}
 */
proto.DM.Portal.BufferProxy.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Operation, opt_index);
};


proto.DM.Portal.BufferProxy.prototype.clearOperationsList = function() {
  this.setOperationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.EditorProxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.EditorProxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.EditorProxy.displayName = 'proto.DM.Portal.EditorProxy';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.EditorProxy.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.EditorProxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.EditorProxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.EditorProxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bufferProxyId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selectionLayerIdsBySiteIdMap: (f = msg.getSelectionLayerIdsBySiteIdMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.EditorProxy}
 */
proto.DM.Portal.EditorProxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.EditorProxy;
  return proto.DM.Portal.EditorProxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.EditorProxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.EditorProxy}
 */
proto.DM.Portal.EditorProxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBufferProxyId(value);
      break;
    case 3:
      var value = msg.getSelectionLayerIdsBySiteIdMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.EditorProxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.EditorProxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.EditorProxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.EditorProxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBufferProxyId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSelectionLayerIdsBySiteIdMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.DM.Portal.EditorProxy.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DM.Portal.EditorProxy.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 buffer_proxy_id = 2;
 * @return {number}
 */
proto.DM.Portal.EditorProxy.prototype.getBufferProxyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.DM.Portal.EditorProxy.prototype.setBufferProxyId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<uint32, uint32> selection_layer_ids_by_site_id = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.DM.Portal.EditorProxy.prototype.getSelectionLayerIdsBySiteIdMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.DM.Portal.EditorProxy.prototype.clearSelectionLayerIdsBySiteIdMap = function() {
  this.getSelectionLayerIdsBySiteIdMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.EditorProxyMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.EditorProxyMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.EditorProxyMetadata.displayName = 'proto.DM.Portal.EditorProxyMetadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.EditorProxyMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.EditorProxyMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.EditorProxyMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.EditorProxyMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bufferProxyId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bufferProxyUri: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.EditorProxyMetadata}
 */
proto.DM.Portal.EditorProxyMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.EditorProxyMetadata;
  return proto.DM.Portal.EditorProxyMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.EditorProxyMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.EditorProxyMetadata}
 */
proto.DM.Portal.EditorProxyMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBufferProxyId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBufferProxyUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.EditorProxyMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.EditorProxyMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.EditorProxyMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.EditorProxyMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBufferProxyId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBufferProxyUri();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.DM.Portal.EditorProxyMetadata.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DM.Portal.EditorProxyMetadata.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 buffer_proxy_id = 2;
 * @return {number}
 */
proto.DM.Portal.EditorProxyMetadata.prototype.getBufferProxyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.DM.Portal.EditorProxyMetadata.prototype.setBufferProxyId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string buffer_proxy_uri = 3;
 * @return {string}
 */
proto.DM.Portal.EditorProxyMetadata.prototype.getBufferProxyUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.DM.Portal.EditorProxyMetadata.prototype.setBufferProxyUri = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.DM.Portal.Update.oneofGroups_);
};
goog.inherits(proto.DM.Portal.Update, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.displayName = 'proto.DM.Portal.Update';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.DM.Portal.Update.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.DM.Portal.Update.VariantCase = {
  VARIANT_NOT_SET: 0,
  SITE_ASSIGNMENT: 1,
  EDITOR_PROXY_SWITCH: 2,
  EDITOR_PROXY_REMOVAL: 3,
  EDITOR_PROXY_CREATION: 4,
  OPERATIONS: 5,
  URI: 6,
  TETHER: 7,
  SELECTIONS: 8
};

/**
 * @return {proto.DM.Portal.Update.VariantCase}
 */
proto.DM.Portal.Update.prototype.getVariantCase = function() {
  return /** @type {proto.DM.Portal.Update.VariantCase} */(jspb.Message.computeOneofCase(this, proto.DM.Portal.Update.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.toObject = function(includeInstance, msg) {
  var f, obj = {
    siteAssignment: (f = msg.getSiteAssignment()) && proto.DM.Portal.Update.SiteAssignment.toObject(includeInstance, f),
    editorProxySwitch: (f = msg.getEditorProxySwitch()) && proto.DM.Portal.Update.EditorProxySwitch.toObject(includeInstance, f),
    editorProxyRemoval: (f = msg.getEditorProxyRemoval()) && proto.DM.Portal.Update.EditorProxyRemoval.toObject(includeInstance, f),
    editorProxyCreation: (f = msg.getEditorProxyCreation()) && proto.DM.Portal.Update.EditorProxyCreation.toObject(includeInstance, f),
    operations: (f = msg.getOperations()) && proto.DM.Portal.Update.Operations.toObject(includeInstance, f),
    uri: (f = msg.getUri()) && proto.DM.Portal.Update.Uri.toObject(includeInstance, f),
    tether: (f = msg.getTether()) && proto.DM.Portal.Tether.toObject(includeInstance, f),
    selections: (f = msg.getSelections()) && proto.DM.Portal.Update.Selections.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update}
 */
proto.DM.Portal.Update.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update;
  return proto.DM.Portal.Update.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update}
 */
proto.DM.Portal.Update.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DM.Portal.Update.SiteAssignment;
      reader.readMessage(value,proto.DM.Portal.Update.SiteAssignment.deserializeBinaryFromReader);
      msg.setSiteAssignment(value);
      break;
    case 2:
      var value = new proto.DM.Portal.Update.EditorProxySwitch;
      reader.readMessage(value,proto.DM.Portal.Update.EditorProxySwitch.deserializeBinaryFromReader);
      msg.setEditorProxySwitch(value);
      break;
    case 3:
      var value = new proto.DM.Portal.Update.EditorProxyRemoval;
      reader.readMessage(value,proto.DM.Portal.Update.EditorProxyRemoval.deserializeBinaryFromReader);
      msg.setEditorProxyRemoval(value);
      break;
    case 4:
      var value = new proto.DM.Portal.Update.EditorProxyCreation;
      reader.readMessage(value,proto.DM.Portal.Update.EditorProxyCreation.deserializeBinaryFromReader);
      msg.setEditorProxyCreation(value);
      break;
    case 5:
      var value = new proto.DM.Portal.Update.Operations;
      reader.readMessage(value,proto.DM.Portal.Update.Operations.deserializeBinaryFromReader);
      msg.setOperations(value);
      break;
    case 6:
      var value = new proto.DM.Portal.Update.Uri;
      reader.readMessage(value,proto.DM.Portal.Update.Uri.deserializeBinaryFromReader);
      msg.setUri(value);
      break;
    case 7:
      var value = new proto.DM.Portal.Tether;
      reader.readMessage(value,proto.DM.Portal.Tether.deserializeBinaryFromReader);
      msg.setTether(value);
      break;
    case 8:
      var value = new proto.DM.Portal.Update.Selections;
      reader.readMessage(value,proto.DM.Portal.Update.Selections.deserializeBinaryFromReader);
      msg.setSelections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSiteAssignment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DM.Portal.Update.SiteAssignment.serializeBinaryToWriter
    );
  }
  f = message.getEditorProxySwitch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DM.Portal.Update.EditorProxySwitch.serializeBinaryToWriter
    );
  }
  f = message.getEditorProxyRemoval();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.DM.Portal.Update.EditorProxyRemoval.serializeBinaryToWriter
    );
  }
  f = message.getEditorProxyCreation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.DM.Portal.Update.EditorProxyCreation.serializeBinaryToWriter
    );
  }
  f = message.getOperations();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.DM.Portal.Update.Operations.serializeBinaryToWriter
    );
  }
  f = message.getUri();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.DM.Portal.Update.Uri.serializeBinaryToWriter
    );
  }
  f = message.getTether();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.DM.Portal.Tether.serializeBinaryToWriter
    );
  }
  f = message.getSelections();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.DM.Portal.Update.Selections.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update.SiteAssignment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.Update.SiteAssignment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.SiteAssignment.displayName = 'proto.DM.Portal.Update.SiteAssignment';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.SiteAssignment.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.SiteAssignment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update.SiteAssignment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.SiteAssignment.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    siteId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update.SiteAssignment}
 */
proto.DM.Portal.Update.SiteAssignment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update.SiteAssignment;
  return proto.DM.Portal.Update.SiteAssignment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update.SiteAssignment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update.SiteAssignment}
 */
proto.DM.Portal.Update.SiteAssignment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSiteId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.SiteAssignment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.SiteAssignment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update.SiteAssignment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.SiteAssignment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSiteId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string peer_id = 1;
 * @return {string}
 */
proto.DM.Portal.Update.SiteAssignment.prototype.getPeerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.Portal.Update.SiteAssignment.prototype.setPeerId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 site_id = 2;
 * @return {number}
 */
proto.DM.Portal.Update.SiteAssignment.prototype.getSiteId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.DM.Portal.Update.SiteAssignment.prototype.setSiteId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update.EditorProxySwitch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.Update.EditorProxySwitch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.EditorProxySwitch.displayName = 'proto.DM.Portal.Update.EditorProxySwitch';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.EditorProxySwitch.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.EditorProxySwitch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update.EditorProxySwitch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.EditorProxySwitch.toObject = function(includeInstance, msg) {
  var f, obj = {
    editorProxyId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update.EditorProxySwitch}
 */
proto.DM.Portal.Update.EditorProxySwitch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update.EditorProxySwitch;
  return proto.DM.Portal.Update.EditorProxySwitch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update.EditorProxySwitch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update.EditorProxySwitch}
 */
proto.DM.Portal.Update.EditorProxySwitch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEditorProxyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.EditorProxySwitch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.EditorProxySwitch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update.EditorProxySwitch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.EditorProxySwitch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEditorProxyId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 editor_proxy_id = 1;
 * @return {number}
 */
proto.DM.Portal.Update.EditorProxySwitch.prototype.getEditorProxyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DM.Portal.Update.EditorProxySwitch.prototype.setEditorProxyId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update.EditorProxyRemoval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.Update.EditorProxyRemoval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.EditorProxyRemoval.displayName = 'proto.DM.Portal.Update.EditorProxyRemoval';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.EditorProxyRemoval.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.EditorProxyRemoval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update.EditorProxyRemoval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.EditorProxyRemoval.toObject = function(includeInstance, msg) {
  var f, obj = {
    editorProxyId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update.EditorProxyRemoval}
 */
proto.DM.Portal.Update.EditorProxyRemoval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update.EditorProxyRemoval;
  return proto.DM.Portal.Update.EditorProxyRemoval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update.EditorProxyRemoval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update.EditorProxyRemoval}
 */
proto.DM.Portal.Update.EditorProxyRemoval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEditorProxyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.EditorProxyRemoval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.EditorProxyRemoval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update.EditorProxyRemoval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.EditorProxyRemoval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEditorProxyId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 editor_proxy_id = 1;
 * @return {number}
 */
proto.DM.Portal.Update.EditorProxyRemoval.prototype.getEditorProxyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DM.Portal.Update.EditorProxyRemoval.prototype.setEditorProxyId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update.EditorProxyCreation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.Update.EditorProxyCreation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.EditorProxyCreation.displayName = 'proto.DM.Portal.Update.EditorProxyCreation';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.EditorProxyCreation.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.EditorProxyCreation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update.EditorProxyCreation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.EditorProxyCreation.toObject = function(includeInstance, msg) {
  var f, obj = {
    editorProxyMetadata: (f = msg.getEditorProxyMetadata()) && proto.DM.Portal.EditorProxyMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update.EditorProxyCreation}
 */
proto.DM.Portal.Update.EditorProxyCreation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update.EditorProxyCreation;
  return proto.DM.Portal.Update.EditorProxyCreation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update.EditorProxyCreation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update.EditorProxyCreation}
 */
proto.DM.Portal.Update.EditorProxyCreation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DM.Portal.EditorProxyMetadata;
      reader.readMessage(value,proto.DM.Portal.EditorProxyMetadata.deserializeBinaryFromReader);
      msg.setEditorProxyMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.EditorProxyCreation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.EditorProxyCreation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update.EditorProxyCreation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.EditorProxyCreation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEditorProxyMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DM.Portal.EditorProxyMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional EditorProxyMetadata editor_proxy_metadata = 1;
 * @return {?proto.DM.Portal.EditorProxyMetadata}
 */
proto.DM.Portal.Update.EditorProxyCreation.prototype.getEditorProxyMetadata = function() {
  return /** @type{?proto.DM.Portal.EditorProxyMetadata} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.EditorProxyMetadata, 1));
};


/** @param {?proto.DM.Portal.EditorProxyMetadata|undefined} value */
proto.DM.Portal.Update.EditorProxyCreation.prototype.setEditorProxyMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.DM.Portal.Update.EditorProxyCreation.prototype.clearEditorProxyMetadata = function() {
  this.setEditorProxyMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.EditorProxyCreation.prototype.hasEditorProxyMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update.Operations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DM.Portal.Update.Operations.repeatedFields_, null);
};
goog.inherits(proto.DM.Portal.Update.Operations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.Operations.displayName = 'proto.DM.Portal.Update.Operations';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DM.Portal.Update.Operations.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.Operations.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.Operations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update.Operations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.Operations.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    teletype$crdt_pb.Operation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update.Operations}
 */
proto.DM.Portal.Update.Operations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update.Operations;
  return proto.DM.Portal.Update.Operations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update.Operations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update.Operations}
 */
proto.DM.Portal.Update.Operations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teletype$crdt_pb.Operation;
      reader.readMessage(value,teletype$crdt_pb.Operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.Operations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.Operations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update.Operations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.Operations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teletype$crdt_pb.Operation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Operation operations = 1;
 * @return {!Array.<!proto.Operation>}
 */
proto.DM.Portal.Update.Operations.prototype.getOperationsList = function() {
  return /** @type{!Array.<!proto.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, teletype$crdt_pb.Operation, 1));
};


/** @param {!Array.<!proto.Operation>} value */
proto.DM.Portal.Update.Operations.prototype.setOperationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Operation}
 */
proto.DM.Portal.Update.Operations.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Operation, opt_index);
};


proto.DM.Portal.Update.Operations.prototype.clearOperationsList = function() {
  this.setOperationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update.Uri = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.Update.Uri, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.Uri.displayName = 'proto.DM.Portal.Update.Uri';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.Uri.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.Uri.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update.Uri} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.Uri.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update.Uri}
 */
proto.DM.Portal.Update.Uri.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update.Uri;
  return proto.DM.Portal.Update.Uri.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update.Uri} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update.Uri}
 */
proto.DM.Portal.Update.Uri.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.Uri.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.Uri.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update.Uri} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.Uri.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uri = 1;
 * @return {string}
 */
proto.DM.Portal.Update.Uri.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DM.Portal.Update.Uri.prototype.setUri = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Portal.Update.Selections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Portal.Update.Selections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Portal.Update.Selections.displayName = 'proto.DM.Portal.Update.Selections';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Portal.Update.Selections.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Portal.Update.Selections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Portal.Update.Selections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.Selections.toObject = function(includeInstance, msg) {
  var f, obj = {
    selectionLayerIdsBySiteIdMap: (f = msg.getSelectionLayerIdsBySiteIdMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Portal.Update.Selections}
 */
proto.DM.Portal.Update.Selections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Portal.Update.Selections;
  return proto.DM.Portal.Update.Selections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Portal.Update.Selections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Portal.Update.Selections}
 */
proto.DM.Portal.Update.Selections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getSelectionLayerIdsBySiteIdMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Portal.Update.Selections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Portal.Update.Selections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Portal.Update.Selections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Portal.Update.Selections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectionLayerIdsBySiteIdMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
};


/**
 * map<uint32, uint32> selection_layer_ids_by_site_id = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.DM.Portal.Update.Selections.prototype.getSelectionLayerIdsBySiteIdMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


proto.DM.Portal.Update.Selections.prototype.clearSelectionLayerIdsBySiteIdMap = function() {
  this.getSelectionLayerIdsBySiteIdMap().clear();
};


/**
 * optional SiteAssignment site_assignment = 1;
 * @return {?proto.DM.Portal.Update.SiteAssignment}
 */
proto.DM.Portal.Update.prototype.getSiteAssignment = function() {
  return /** @type{?proto.DM.Portal.Update.SiteAssignment} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update.SiteAssignment, 1));
};


/** @param {?proto.DM.Portal.Update.SiteAssignment|undefined} value */
proto.DM.Portal.Update.prototype.setSiteAssignment = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearSiteAssignment = function() {
  this.setSiteAssignment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasSiteAssignment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EditorProxySwitch editor_proxy_switch = 2;
 * @return {?proto.DM.Portal.Update.EditorProxySwitch}
 */
proto.DM.Portal.Update.prototype.getEditorProxySwitch = function() {
  return /** @type{?proto.DM.Portal.Update.EditorProxySwitch} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update.EditorProxySwitch, 2));
};


/** @param {?proto.DM.Portal.Update.EditorProxySwitch|undefined} value */
proto.DM.Portal.Update.prototype.setEditorProxySwitch = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearEditorProxySwitch = function() {
  this.setEditorProxySwitch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasEditorProxySwitch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EditorProxyRemoval editor_proxy_removal = 3;
 * @return {?proto.DM.Portal.Update.EditorProxyRemoval}
 */
proto.DM.Portal.Update.prototype.getEditorProxyRemoval = function() {
  return /** @type{?proto.DM.Portal.Update.EditorProxyRemoval} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update.EditorProxyRemoval, 3));
};


/** @param {?proto.DM.Portal.Update.EditorProxyRemoval|undefined} value */
proto.DM.Portal.Update.prototype.setEditorProxyRemoval = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearEditorProxyRemoval = function() {
  this.setEditorProxyRemoval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasEditorProxyRemoval = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EditorProxyCreation editor_proxy_creation = 4;
 * @return {?proto.DM.Portal.Update.EditorProxyCreation}
 */
proto.DM.Portal.Update.prototype.getEditorProxyCreation = function() {
  return /** @type{?proto.DM.Portal.Update.EditorProxyCreation} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update.EditorProxyCreation, 4));
};


/** @param {?proto.DM.Portal.Update.EditorProxyCreation|undefined} value */
proto.DM.Portal.Update.prototype.setEditorProxyCreation = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearEditorProxyCreation = function() {
  this.setEditorProxyCreation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasEditorProxyCreation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Operations operations = 5;
 * @return {?proto.DM.Portal.Update.Operations}
 */
proto.DM.Portal.Update.prototype.getOperations = function() {
  return /** @type{?proto.DM.Portal.Update.Operations} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update.Operations, 5));
};


/** @param {?proto.DM.Portal.Update.Operations|undefined} value */
proto.DM.Portal.Update.prototype.setOperations = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearOperations = function() {
  this.setOperations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasOperations = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Uri uri = 6;
 * @return {?proto.DM.Portal.Update.Uri}
 */
proto.DM.Portal.Update.prototype.getUri = function() {
  return /** @type{?proto.DM.Portal.Update.Uri} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update.Uri, 6));
};


/** @param {?proto.DM.Portal.Update.Uri|undefined} value */
proto.DM.Portal.Update.prototype.setUri = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearUri = function() {
  this.setUri(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasUri = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Tether tether = 7;
 * @return {?proto.DM.Portal.Tether}
 */
proto.DM.Portal.Update.prototype.getTether = function() {
  return /** @type{?proto.DM.Portal.Tether} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Tether, 7));
};


/** @param {?proto.DM.Portal.Tether|undefined} value */
proto.DM.Portal.Update.prototype.setTether = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearTether = function() {
  this.setTether(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasTether = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Selections selections = 8;
 * @return {?proto.DM.Portal.Update.Selections}
 */
proto.DM.Portal.Update.prototype.getSelections = function() {
  return /** @type{?proto.DM.Portal.Update.Selections} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update.Selections, 8));
};


/** @param {?proto.DM.Portal.Update.Selections|undefined} value */
proto.DM.Portal.Update.prototype.setSelections = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.DM.Portal.Update.oneofGroups_[0], value);
};


proto.DM.Portal.Update.prototype.clearSelections = function() {
  this.setSelections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.Update.prototype.hasSelections = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional SubscriptionResponse subscription_response = 1;
 * @return {?proto.DM.Portal.SubscriptionResponse}
 */
proto.DM.Portal.prototype.getSubscriptionResponse = function() {
  return /** @type{?proto.DM.Portal.SubscriptionResponse} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.SubscriptionResponse, 1));
};


/** @param {?proto.DM.Portal.SubscriptionResponse|undefined} value */
proto.DM.Portal.prototype.setSubscriptionResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.DM.Portal.oneofGroups_[0], value);
};


proto.DM.Portal.prototype.clearSubscriptionResponse = function() {
  this.setSubscriptionResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.prototype.hasSubscriptionResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Tether tether = 2;
 * @return {?proto.DM.Portal.Tether}
 */
proto.DM.Portal.prototype.getTether = function() {
  return /** @type{?proto.DM.Portal.Tether} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Tether, 2));
};


/** @param {?proto.DM.Portal.Tether|undefined} value */
proto.DM.Portal.prototype.setTether = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.DM.Portal.oneofGroups_[0], value);
};


proto.DM.Portal.prototype.clearTether = function() {
  this.setTether(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.prototype.hasTether = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BufferProxy buffer_proxy = 3;
 * @return {?proto.DM.Portal.BufferProxy}
 */
proto.DM.Portal.prototype.getBufferProxy = function() {
  return /** @type{?proto.DM.Portal.BufferProxy} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.BufferProxy, 3));
};


/** @param {?proto.DM.Portal.BufferProxy|undefined} value */
proto.DM.Portal.prototype.setBufferProxy = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.DM.Portal.oneofGroups_[0], value);
};


proto.DM.Portal.prototype.clearBufferProxy = function() {
  this.setBufferProxy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.prototype.hasBufferProxy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EditorProxy editor_proxy = 4;
 * @return {?proto.DM.Portal.EditorProxy}
 */
proto.DM.Portal.prototype.getEditorProxy = function() {
  return /** @type{?proto.DM.Portal.EditorProxy} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.EditorProxy, 4));
};


/** @param {?proto.DM.Portal.EditorProxy|undefined} value */
proto.DM.Portal.prototype.setEditorProxy = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.DM.Portal.oneofGroups_[0], value);
};


proto.DM.Portal.prototype.clearEditorProxy = function() {
  this.setEditorProxy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.prototype.hasEditorProxy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EditorProxyMetadata editor_proxy_metadata = 5;
 * @return {?proto.DM.Portal.EditorProxyMetadata}
 */
proto.DM.Portal.prototype.getEditorProxyMetadata = function() {
  return /** @type{?proto.DM.Portal.EditorProxyMetadata} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.EditorProxyMetadata, 5));
};


/** @param {?proto.DM.Portal.EditorProxyMetadata|undefined} value */
proto.DM.Portal.prototype.setEditorProxyMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.DM.Portal.oneofGroups_[0], value);
};


proto.DM.Portal.prototype.clearEditorProxyMetadata = function() {
  this.setEditorProxyMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.prototype.hasEditorProxyMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Update update = 6;
 * @return {?proto.DM.Portal.Update}
 */
proto.DM.Portal.prototype.getUpdate = function() {
  return /** @type{?proto.DM.Portal.Update} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal.Update, 6));
};


/** @param {?proto.DM.Portal.Update|undefined} value */
proto.DM.Portal.prototype.setUpdate = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.DM.Portal.oneofGroups_[0], value);
};


proto.DM.Portal.prototype.clearUpdate = function() {
  this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.Portal.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DM.Channel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DM.Channel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DM.Channel.displayName = 'proto.DM.Channel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DM.Channel.prototype.toObject = function(opt_includeInstance) {
  return proto.DM.Channel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DM.Channel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Channel.toObject = function(includeInstance, msg) {
  var f, obj = {
    join: jspb.Message.getFieldWithDefault(msg, 1, false),
    leave: jspb.Message.getFieldWithDefault(msg, 2, false),
    close: jspb.Message.getFieldWithDefault(msg, 3, false),
    portalId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    hostId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DM.Channel}
 */
proto.DM.Channel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DM.Channel;
  return proto.DM.Channel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DM.Channel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DM.Channel}
 */
proto.DM.Channel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJoin(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeave(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClose(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortalId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DM.Channel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DM.Channel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DM.Channel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DM.Channel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJoin();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getLeave();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getClose();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPortalId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHostId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bool join = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DM.Channel.prototype.getJoin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.DM.Channel.prototype.setJoin = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool leave = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DM.Channel.prototype.getLeave = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.DM.Channel.prototype.setLeave = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool close = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DM.Channel.prototype.getClose = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.DM.Channel.prototype.setClose = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string portal_id = 4;
 * @return {string}
 */
proto.DM.Channel.prototype.getPortalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.DM.Channel.prototype.setPortalId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string channel_id = 5;
 * @return {string}
 */
proto.DM.Channel.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.DM.Channel.prototype.setChannelId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string host_id = 6;
 * @return {string}
 */
proto.DM.Channel.prototype.getHostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.DM.Channel.prototype.setHostId = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool user_id_request = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DM.prototype.getUserIdRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.DM.prototype.setUserIdRequest = function(value) {
  jspb.Message.setOneofField(this, 1, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearUserIdRequest = function() {
  jspb.Message.setOneofField(this, 1, proto.DM.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasUserIdRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserIdResponse user_id_response = 2;
 * @return {?proto.DM.UserIdResponse}
 */
proto.DM.prototype.getUserIdResponse = function() {
  return /** @type{?proto.DM.UserIdResponse} */ (
    jspb.Message.getWrapperField(this, proto.DM.UserIdResponse, 2));
};


/** @param {?proto.DM.UserIdResponse|undefined} value */
proto.DM.prototype.setUserIdResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearUserIdResponse = function() {
  this.setUserIdResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasUserIdResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool create_portal_request = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DM.prototype.getCreatePortalRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.DM.prototype.setCreatePortalRequest = function(value) {
  jspb.Message.setOneofField(this, 3, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearCreatePortalRequest = function() {
  jspb.Message.setOneofField(this, 3, proto.DM.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasCreatePortalRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CreatePortalResponse create_portal_response = 4;
 * @return {?proto.DM.CreatePortalResponse}
 */
proto.DM.prototype.getCreatePortalResponse = function() {
  return /** @type{?proto.DM.CreatePortalResponse} */ (
    jspb.Message.getWrapperField(this, proto.DM.CreatePortalResponse, 4));
};


/** @param {?proto.DM.CreatePortalResponse|undefined} value */
proto.DM.prototype.setCreatePortalResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearCreatePortalResponse = function() {
  this.setCreatePortalResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasCreatePortalResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional JoinPortalRequest join_portal_request = 5;
 * @return {?proto.DM.JoinPortalRequest}
 */
proto.DM.prototype.getJoinPortalRequest = function() {
  return /** @type{?proto.DM.JoinPortalRequest} */ (
    jspb.Message.getWrapperField(this, proto.DM.JoinPortalRequest, 5));
};


/** @param {?proto.DM.JoinPortalRequest|undefined} value */
proto.DM.prototype.setJoinPortalRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearJoinPortalRequest = function() {
  this.setJoinPortalRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasJoinPortalRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional JoinPortalResponse join_portal_response = 6;
 * @return {?proto.DM.JoinPortalResponse}
 */
proto.DM.prototype.getJoinPortalResponse = function() {
  return /** @type{?proto.DM.JoinPortalResponse} */ (
    jspb.Message.getWrapperField(this, proto.DM.JoinPortalResponse, 6));
};


/** @param {?proto.DM.JoinPortalResponse|undefined} value */
proto.DM.prototype.setJoinPortalResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearJoinPortalResponse = function() {
  this.setJoinPortalResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasJoinPortalResponse = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Notification notification = 7;
 * @return {?proto.DM.Notification}
 */
proto.DM.prototype.getNotification = function() {
  return /** @type{?proto.DM.Notification} */ (
    jspb.Message.getWrapperField(this, proto.DM.Notification, 7));
};


/** @param {?proto.DM.Notification|undefined} value */
proto.DM.prototype.setNotification = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearNotification = function() {
  this.setNotification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasNotification = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Request request = 8;
 * @return {?proto.DM.Request}
 */
proto.DM.prototype.getRequest = function() {
  return /** @type{?proto.DM.Request} */ (
    jspb.Message.getWrapperField(this, proto.DM.Request, 8));
};


/** @param {?proto.DM.Request|undefined} value */
proto.DM.prototype.setRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Response response = 9;
 * @return {?proto.DM.Response}
 */
proto.DM.prototype.getResponse = function() {
  return /** @type{?proto.DM.Response} */ (
    jspb.Message.getWrapperField(this, proto.DM.Response, 9));
};


/** @param {?proto.DM.Response|undefined} value */
proto.DM.prototype.setResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Portal portal = 10;
 * @return {?proto.DM.Portal}
 */
proto.DM.prototype.getPortal = function() {
  return /** @type{?proto.DM.Portal} */ (
    jspb.Message.getWrapperField(this, proto.DM.Portal, 10));
};


/** @param {?proto.DM.Portal|undefined} value */
proto.DM.prototype.setPortal = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearPortal = function() {
  this.setPortal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasPortal = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Channel channel = 11;
 * @return {?proto.DM.Channel}
 */
proto.DM.prototype.getChannel = function() {
  return /** @type{?proto.DM.Channel} */ (
    jspb.Message.getWrapperField(this, proto.DM.Channel, 11));
};


/** @param {?proto.DM.Channel|undefined} value */
proto.DM.prototype.setChannel = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.DM.oneofGroups_[0], value);
};


proto.DM.prototype.clearChannel = function() {
  this.setChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DM.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto);
